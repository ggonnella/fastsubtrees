#!/usr/bin/env python3
"""
Creates json files for a given attribute present in the database

Usage:
  fastsubtrees-attributes-construct [options] <nodefile> <subtreeroot> <attribute> <pymodule> <outputfile>

Arguments:
  <nodefile>        Output of fastsubtrees-construct
  <subtreeroot>     ID of the root of the Tree
  <attribute>       Name of the attribute
  <pymodule>        Some module for python which defines the function for getting the attribute values
                    called get_attribute_list
  <outputfile>      Name of the file to store the output into

Options:
  --quiet      disable log messages
  --debug      print debug information
  --help       show this help message and exit
  --version    show program's version number and exit
"""

from docopt import docopt
from fastsubtrees import _scripts_support, Tree
import importlib
import json
from pathlib import Path

def main(args):
  modulename = Path(args["<pymodule>"]).stem
  spec = importlib.util.spec_from_file_location(modulename, args["<pymodule>"])
  m = importlib.util.module_from_spec(spec)
  spec.loader.exec_module(m)
  attr = m.Attributes()
  tree = Tree.from_file(args["<nodefile>"])
  subtree_root = int(args["<subtreeroot>"])
  subtree_ids = tree.subtree_ids(subtree_root)
  result = attr.get_attribute_list(subtree_ids, args["<attribute>"])
  filename = args["<outputfile>"]
  with open(f"tree-cache/{filename}.attr", "w") as outfile:
    for element in result:
      outfile.write(json.dumps(element) + "\n")

if __name__ == "__main__":
  args = docopt(__doc__, version="0.1")
  _scripts_support.setup_verbosity(args)
  main(args)
