#!/usr/bin/env python3
"""
Creates json files for a given attribute present in the database

Usage:
  fastsubtrees-attributes-construct [options] <nodefile> <configfile> <subtreeroot> <attribute>
  <pythonmodule> <outputfile>

Arguments:
  <nodefile>        Output of fastsubtrees-construct
  <configfile>      Configuration file that contains the arguments required to connect to the database
  <subtreeroot>     ID of the root of the Tree
  <attribute>       Name of the attribute
  <pythonmodule>    Some module for python which defines the function for getting the attribute values
                    called get_attribute_list
  <outputfile>      Name of the file to store the output into

Options:
  --quiet           be quiet
  --debug           print debug messages
"""

from docopt import docopt
from fastsubtrees import _scripts_support, Tree
import importlib
import json
from pathlib import Path


def main():
    modulename = Path(args["<pythonmodule>"]).stem
    spec = importlib.util.spec_from_file_location(modulename, args["<pythonmodule>"])
    m = importlib.util.module_from_spec(spec)
    spec.loader.exec_module(m)
    attr = m.Attributes(args["<configfile>"])
    tree = Tree.from_file(args["<nodefile>"])
    subtree_root = int(args["<subtreeroot>"])
    subtree_ids = tree.subtree_ids(subtree_root)
    result = attr.get_attribute_list(subtree_ids, args["<attribute>"])
    filename = args["<outputfile>"]
    with open(f"tree-cache/{filename}.attr", "w") as outfile:
        for element in result:
            outfile.write(json.dumps(element) + "\n")


if __name__ == "__main__":
    args = docopt(__doc__, version="0.1")
    _scripts_support.setup_verbosity(args)
    main()
